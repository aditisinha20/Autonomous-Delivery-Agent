# -*- coding: utf-8 -*-
"""src/run.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qQEmlo2ZXw5YHMYdvN4a5q-zQsZ0ZbBk
"""

# src/run.py
import argparse
from environment import GridEnvironment
from agent import Agent
from search_algorithms import bfs, ucs, astar
from local_search import hill_climb_local
import json
import time
from pathlib import Path

"add CLI runner to run planners and save JSON results"
def run_once(mapfile, algo, start, goal):
    env = GridEnvironment(grid_file=mapfile)
    if algo == "bfs":
        fn = bfs
    elif algo == "ucs":
        fn = ucs
    elif algo == "astar":
        fn = astar
    elif algo == "hill":
        fn = hill_climb_local
    else:
        raise ValueError("algo must be one of bfs, ucs, astar, hill")

    t0 = time.time()
    path, cost, nodes = fn(env, start, goal)
    t1 = time.time()
    return {
        "map": str(mapfile),
        "algo": algo,
        "start": start,
        "goal": goal,
        "path": path,
        "cost": cost,
        "nodes": nodes,
        "time": t1-t0
    }

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--map', required=True)
    parser.add_argument('--algo', required=True, choices=['bfs','ucs','astar','hill'])
    parser.add_argument('--start', nargs=2, type=int, default=[0,0])
    parser.add_argument('--goal', nargs=2, type=int, default=[4,4])
    parser.add_argument('--out', default='../results/logs/run.json')
    args = parser.parse_args()

    result = run_once(args.map, args.algo, tuple(args.start), tuple(args.goal))
    outp = Path(args.out)
    outp.parent.mkdir(parents=True, exist_ok=True)
    with open(outp, 'w') as f:
        json.dump(result, f, indent=2)
    print("Result saved to", outp)
    print("Summary:", result)

if __name__ == "__main__":
    main()