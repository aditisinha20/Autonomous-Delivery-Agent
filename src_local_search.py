# -*- coding: utf-8 -*-
"""src/local_search.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rOgx1iBGzIfr0RsLW5X--rmgzk3NySyP
"""

# src/local_search.py
import random
from search_algorithms import manhattan

def hill_climb_local(env, start, goal, max_steps=500):
    """
    dd simple hill-climb local replanner.
    """
    cur = start
    path = [cur]
    nodes = 0
    for _ in range(max_steps):
        if cur == goal:
            cost = sum(env.get_cost(p) for p in path[1:])
            return path, cost, nodes
        neigh = env.neighbors(cur)
        neigh.sort(key=lambda p: manhattan(p, goal))
        moved = False
        for n in neigh:
            if n not in path:
                path.append(n)
                cur = n
                nodes += 1
                moved = True
                break
        if not moved:
            # simple restart
            cur = start
            path = [start]
    return None, float('inf'), nodes